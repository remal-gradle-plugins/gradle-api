name: build

on:
  push:
    branches:
    - main
    - 'test/*'
  pull_request: { }
  schedule:
  - cron: '13/15 * * * *'

concurrency:
  group: build-${{github.ref}}
  cancel-in-progress: false

defaults:
  run:
    shell: bash

env:
  GRADLE_OPTS: -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4 -Dorg.gradle.warning.mode=all -Dorg.gradle.logging.stacktrace=all -Dorg.gradle.daemon=true -Dhttp.keepAlive=false -Dsun.net.client.defaultConnectTimeout=15000 -Dsun.net.client.defaultReadTimeout=600000 -Dsun.net.http.retryPost=false -Dsun.io.useCanonCaches=false -Djava.awt.headless=true -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Read min supported Gradle version
      id: min-gradle-version
      uses: remal-github-actions/read-property@v1
      with:
        file: gradle.properties
        property: 'gradle.min-version'

    - name: Get draft versions to test
      id: test-versions-draft
      uses: remal-github-actions/matrix-versions@v1
      with:
        matrix: |
          gradle:
            dependency: java
            only:
            - stable-majors+current-unstable
    - name: Get all versions to test
      id: test-versions
      run: |
        MATRIX=$(cat <<'END_JSON'
        ${{toJSON(steps.test-versions-draft.outputs.matrix)}}
        END_JSON
        )
        MATRIX=$(jq '. += [{"gradle": "${{steps.min-gradle-version.outputs.value}}"}]' <<<"$MATRIX")
        echo "matrix=$MATRIX" | tee -a $GITHUB_OUTPUT

    - name: Dump
      env:
        MATRIX: ${{toJSON(steps.test-versions.outputs.matrix)}}
      run: echo "$MATRIX"
